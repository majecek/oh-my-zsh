#compdef prlctl
#autoload

_prlctl () {

  local cmd
  if (( CURRENT > 2)); then
    cmd=${words[2]}
    # Set the context for the subcommand.
    curcontext="${curcontext%:*:*}:prlctl-$cmd"
    # Narrow the range of words we are looking at to exclude `pass'
    (( CURRENT-- ))
    shift words
    # Run the completion for the subcommand
    case "${cmd}" in
      list)
        _arguments : \
          "-i[<ID | NAME>]" \
          "--info[<ID | NAME>]" \
        ;;
      # snapshot-list)
      #   _arguments : \
      #     "-r[re-encrypt existing passwords]" \
      #     "--reencrypt[re-encrypt existing passwords]"
      #   ;;
    esac
  else  
    local -a commands
    commands=(
      "list:Lists the virtual machines currently existing on the Parallels server"
      "snapshot-list:This command is used to list Vm tree"
      "help:Help"
    )
    _describe -t commands 'prlctl' commands
    _arguments : \
      "--version[Output version information]" \
      "--help[Output help message]"

  fi      
}


# function _prlctl_commands() {
#     local ret=1 state
#     _arguments ':subcommand:->subcommand' && ret=0

#     case $state in
#       subcommand)
#         subcommands=(
#           "list:List all running instances"
#           "reset:Reset"
#         )
#         _describe -t subcommands 'prlctl subcommands' subcommands && ret=0
#     esac

#     return ret
# }

# compdef _prlctl_commands prlctl